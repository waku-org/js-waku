name: CI

on:
  push:
    branches:
      - "master"
      - "staging"
      - "trying"
  pull_request:
  workflow_dispatch:
    inputs:
      nim_wakunode_image:
        description: "Docker hub image name taken from https://hub.docker.com/r/wakuorg/nwaku/tags. Format: wakuorg/nwaku:v0.20.0"
        required: false
        type: string

env:
  NODE_JS: "20"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: waku-org/js-waku

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_JS }}
      - uses: ./.github/actions/npm
      - run: npm run build
      - run: npm run check
      - run: npm run doc

  proto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: waku-org/js-waku
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_JS }}
      - uses: ./.github/actions/npm
      - name: Generate protobuf code
        run: |
          npm run proto
          npm run fix
      - name: Check all protobuf code was committed
        shell: bash
        run: |
          res=$(git status --short --ignore-submodules)
          echo -n "'$res'" # For debug purposes
          [ $(echo -n "$res"|wc -l) -eq 0 ]

  browser:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0-jammy
    env:
      HOME: "/root"
    steps:
      - uses: actions/checkout@v3
        with:
          repository: waku-org/js-waku
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_JS }}
      - uses: ./.github/actions/npm
      - run: npm run build:esm
      - run: npm run test:browser

  build_rln_tree:
    if: false # This condition disables the job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: waku-org/js-waku
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_JS }}
      - name: Check for existing RLN tree artifact
        id: check-artifact
        uses: actions/github-script@v6
        with:
          script: |
            const artifact = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            console.log(artifact);
            const foundArtifact = artifact.data.artifacts.find(art => art.name === 'rln_tree.tar.gz');
            if (foundArtifact) {
              core.setOutput('artifact_id', foundArtifact.id);
              core.setOutput('artifact_found', 'true');
            } else {
              core.setOutput('artifact_found', 'false');
            }
      - name: Download RLN tree artifact
        if: steps.check-artifact.outputs.artifact_found == 'true'
        uses: actions/download-artifact@v4
        with:
          name: rln_tree.tar.gz
          path: /tmp
      - uses: ./.github/actions/npm
      - name: Sync rln tree and save artifact
        run: |
          mkdir -p /tmp/rln_tree.db
          npm run build:esm
          npm run sync-rln-tree
          tar -czf rln_tree.tar.gz -C /tmp/rln_tree.db .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rln_tree.tar.gz
          path: rln_tree.tar.gz

  node:
    uses: ./.github/workflows/test-node.yml
    secrets: inherit
    with:
      nim_wakunode_image: ${{ inputs.nim_wakunode_image || 'wakuorg/nwaku:v0.35.1' }}
      test_type: node
      allure_reports: true

  node_optional:
    uses: ./.github/workflows/test-node.yml
    with:
      nim_wakunode_image: ${{ inputs.nim_wakunode_image || 'wakuorg/nwaku:v0.35.1' }}
      test_type: node-optional

  node_with_nwaku_master:
    uses: ./.github/workflows/test-node.yml
    with:
      nim_wakunode_image: harbor.status.im/wakuorg/nwaku:latest
      test_type: nwaku-master

  dogfooding:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout js-waku
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_JS }}

      - uses: ./.github/actions/npm

      - name: Build js-waku
        run: npm run build

      - name: Pack js-waku packages
        run: |
          # Create directory for packed packages
          mkdir -p packed-packages
          
          # Pack each workspace package
          for package in packages/*; do
            if [ -d "$package" ] && [ -f "$package/package.json" ]; then
              echo "Packing $package"
              (cd "$package" && npm pack --pack-destination ../../packed-packages)
            fi
          done
          
          # List packed packages
          ls -la packed-packages/

      - name: Checkout dogfooding app
        run: |
          git clone --depth 1 https://github.com/waku-org/lab.waku.org.git lab-waku-org

      - name: Update dogfooding app dependencies
        working-directory: lab-waku-org/examples/dogfooding
        run: |
          # Save original package.json
          cp package.json package.json.bak
          
          # Update @waku/* dependencies to use local packed versions
          node -e "
          const fs = require('fs');
          const path = require('path');
          const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
          
          const packedDir = path.resolve('../../../packed-packages');
          const packedFiles = fs.readdirSync(packedDir);
          
          // Update dependencies
          for (const dep in packageJson.dependencies) {
            if (dep.startsWith('@waku/')) {
              const packageNameWithoutScope = dep.replace('@', '').replace('/', '-');
              const tarball = packedFiles.find(f => 
                f.startsWith(packageNameWithoutScope + '-') && f.endsWith('.tgz')
              );
              if (tarball) {
                packageJson.dependencies[dep] = 'file:' + path.join(packedDir, tarball);
                console.log(\`Updated \${dep} to use \${tarball}\`);
              }
            }
          }
          
          fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
          "
          
          # Show the diff
          echo "=== Package.json changes ==="
          diff -u package.json.bak package.json || true

      - name: Install dogfooding app dependencies
        working-directory: lab-waku-org/examples/dogfooding
        run: |
          # Clean install to ensure we use the packed versions
          rm -rf node_modules package-lock.json
          npm install

      - name: Build dogfooding app
        working-directory: lab-waku-org/examples/dogfooding
        run: npm run build

  maybe-release:
    name: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [check, proto, browser, node]
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.CI_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: waku-org/js-waku
        if: ${{ steps.release.outputs.releases_created }}

      - uses: actions/setup-node@v3
        if: ${{ steps.release.outputs.releases_created }}
        with:
          node-version: ${{ env.NODE_JS }}
          registry-url: "https://registry.npmjs.org"

      - run: npm install
        if: ${{ steps.release.outputs.releases_created }}

      - run: npm run build
        if: ${{ steps.release.outputs.releases_created }}

      - run: npm run publish
        if: ${{ steps.release.outputs.releases_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_JS_WAKU_PUBLISH }}
